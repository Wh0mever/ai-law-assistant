import openai
import logging
from typing import Optional
from legal_knowledge import LegalKnowledge

logger = logging.getLogger(__name__)

class AIService:
    def __init__(self, api_key: str):
        self.client = openai.AsyncOpenAI(api_key=api_key)
        
    async def find_legal_practice(self, case_description: str) -> str:
        """–ü–æ–∏—Å–∫ —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é —Å–∏—Ç—É–∞—Ü–∏–∏"""
        try:
            system_prompt = LegalKnowledge.get_system_prompt_for_practice()
            
            from config import Config
            response = await self.client.chat.completions.create(
                model=Config.OPENAI_MODEL,
                messages=[
                    {"role": "system", "content": system_prompt},
                    {"role": "user", "content": f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –∏ –Ω–∞–π–¥–∏—Ç–µ —Å—É–¥–µ–±–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É: {case_description}"}
                ],
                temperature=Config.OPENAI_TEMPERATURE
            )
            
            return response.choices[0].message.content
            
        except Exception as e:
            logger.error(f"Error in find_legal_practice: {e}")
            if "insufficient_quota" in str(e) or "429" in str(e):
                return """‚ùå **–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ OpenAI API**

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏—Å—á–µ—Ä–ø–∞–Ω–∞ –∫–≤–æ—Ç–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò.

üìã **–ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –≤—Ä—É—á–Ω—É—é:**

**–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ –±–µ–∑ –ø—Ä–∏–∫–∞–∑–∞** - —Å–µ—Ä—å–µ–∑–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —Ç—Ä—É–¥–æ–≤–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞.

**–í–∞—à–∏ –ø—Ä–∞–≤–∞:**
‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ (—Å—Ç. 394 –¢–ö –†–§)  
‚Ä¢ –û–ø–ª–∞—Ç–∞ –≤—ã–Ω—É–∂–¥–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—É–ª–∞
‚Ä¢ –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –º–æ—Ä–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–¥–∞

**–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞:**
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚Ññ 18-–ö–ì20-17
‚Ä¢ –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ ‚Ññ 2

**–î–µ–π—Å—Ç–≤–∏—è:**
1. –¢—Ä–µ–±—É–π—Ç–µ –ø–∏—Å—å–º–µ–Ω–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∏—á–∏–Ω —É–≤–æ–ª—å–Ω–µ–Ω–∏—è
2. –°–æ–±–∏—Ä–∞–π—Ç–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø—Ä–∏–∫–∞–∑–∞
3. –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Å—É–¥ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–µ—Å—è—Ü–∞
4. –ü–æ–¥–∞–≤–∞–π—Ç–µ –∏—Å–∫ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ

**–î–æ–∫—É–º–µ–Ω—Ç—ã:** —Ç—Ä—É–¥–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞, —Å–ø—Ä–∞–≤–∫–∏ –æ –¥–æ—Ö–æ–¥–∞—Ö, —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è."""
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–∏—Ç—É–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ."
    
    async def generate_complaint(self, court_decision_text: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–ø–µ–ª–ª—è—Ü–∏–æ–Ω–Ω–æ–π/–∫–∞—Å—Å–∞—Ü–∏–æ–Ω–Ω–æ–π –∂–∞–ª–æ–±—ã"""
        try:
            system_prompt = LegalKnowledge.get_system_prompt_for_complaint()
            
            from config import Config
            response = await self.client.chat.completions.create(
                model=Config.OPENAI_MODEL,
                messages=[
                    {"role": "system", "content": system_prompt},
                    {"role": "user", "content": f"–°–æ—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–æ–µ–∫—Ç –∞–ø–µ–ª–ª—è—Ü–∏–æ–Ω–Ω–æ–π/–∫–∞—Å—Å–∞—Ü–∏–æ–Ω–Ω–æ–π –∂–∞–ª–æ–±—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ—à–µ–Ω–∏—è —Å—É–¥–∞: {court_decision_text[:4000]}..."}
                ],
                temperature=Config.OPENAI_TEMPERATURE
            )
            
            return response.choices[0].message.content
            
        except Exception as e:
            logger.error(f"Error in generate_complaint: {e}")
            if "insufficient_quota" in str(e) or "429" in str(e):
                return """‚ùå **–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ OpenAI API**

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏—Å—á–µ—Ä–ø–∞–Ω–∞ –∫–≤–æ—Ç–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò.

üìù **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–ø–µ–ª–ª—è—Ü–∏–æ–Ω–Ω–æ–π –∂–∞–ª–æ–±—ã:**

**1. –í–í–û–î–ù–ê–Ø –ß–ê–°–¢–¨:**
- –í [–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–ø–µ–ª–ª—è—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å—É–¥–∞]
- –û—Ç: [–≤–∞—à–∏ –§–ò–û, –∞–¥—Ä–µ—Å]
- –ü–æ –¥–µ–ª—É ‚Ññ [–Ω–æ–º–µ—Ä –¥–µ–ª–∞]
- –†–µ—à–µ–Ω–∏–µ –æ—Ç [–¥–∞—Ç–∞] [—Å—É–¥–∞ –ø–µ—Ä–≤–æ–π –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏]

**2. –û–ü–ò–°–ê–¢–ï–õ–¨–ù–ê–Ø –ß–ê–°–¢–¨:**
- –ö—Ä–∞—Ç–∫–æ–µ –∏–∑–ª–æ–∂–µ–Ω–∏–µ —Å—É—Ç–∏ —Å–ø–æ—Ä–∞
- –†–µ—à–µ–Ω–∏–µ —Å—É–¥–∞ –ø–µ—Ä–≤–æ–π –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏
- –î–æ–≤–æ–¥—ã —Å—É–¥–∞

**3. –ú–û–¢–ò–í–ò–†–û–í–û–ß–ù–ê–Ø –ß–ê–°–¢–¨:**
- –ù–∞—Ä—É—à–µ–Ω–∏—è –Ω–æ—Ä–º –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–≤–∞
- –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–≤–∞  
- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤
- –°—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–æ–≤

**4. –ü–†–û–°–ò–¢–ï–õ–¨–ù–ê–Ø –ß–ê–°–¢–¨:**
- –ü—Ä–æ—à—É –æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ —Å—É–¥–∞
- –ü—Ä–∏–Ω—è—Ç—å –Ω–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤ –º–æ—é –ø–æ–ª—å–∑—É

üìé **–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è:** –∫–æ–ø–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞

üí° **–°–æ–≤–µ—Ç:** –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —é—Ä–∏—Å—Ç—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∏ –∂–∞–ª–æ–±—ã."""
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –∂–∞–ª–æ–±—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ."
    
    async def check_document(self, document_text: str) -> str:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞ –æ—à–∏–±–∫–∏ –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏"""
        try:
            system_prompt = LegalKnowledge.get_system_prompt_for_check()
            
            from config import Config
            response = await self.client.chat.completions.create(
                model=Config.OPENAI_MODEL,
                messages=[
                    {"role": "system", "content": system_prompt},
                    {"role": "user", "content": f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ –æ—à–∏–±–∫–∏ –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏: {document_text[:4000]}..."}
                ],
                temperature=Config.OPENAI_TEMPERATURE
            )
            
            return response.choices[0].message.content
            
        except Exception as e:
            logger.error(f"Error in check_document: {e}")
            if "insufficient_quota" in str(e) or "429" in str(e):
                return """‚ùå **–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ OpenAI API**

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏—Å—á–µ—Ä–ø–∞–Ω–∞ –∫–≤–æ—Ç–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò.

üìã **–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:**

**–§–û–†–ú–ê–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:**
‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å—É–¥–∞/–æ—Ä–≥–∞–Ω–∞
‚Ä¢ –ü–æ–ª–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã —Å—Ç–æ—Ä–æ–Ω (–§–ò–û, –∞–¥—Ä–µ—Å–∞)
‚Ä¢ –ß–µ—Ç–∫–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
‚Ä¢ –ü–æ–¥–ø–∏—Å—å –∏ –¥–∞—Ç–∞
‚Ä¢ –ü–µ—Ä–µ—á–µ–Ω—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π

**–ü–†–ê–í–û–í–´–ï –ê–°–ü–ï–ö–¢–´:**
‚Ä¢ –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ –ø–æ–¥–∞—á–∏
‚Ä¢ –°—Å—ã–ª–∫–∏ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã –ø—Ä–∞–≤–∞
‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–¥—Å—É–¥–Ω–æ—Å—Ç—å/–ø–æ–¥–≤–µ–¥–æ–º—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
‚Ä¢ –£–ø–ª–∞—Ç–∞ –≥–æ—Å–ø–æ—à–ª–∏–Ω—ã (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)

**–î–û–ö–ê–ó–ê–¢–ï–õ–¨–ù–ê–Ø –ë–ê–ó–ê:**
‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∑–∞—è–≤–ª–µ–Ω–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
‚Ä¢ –î–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤

üí° **–°–æ–≤–µ—Ç:** –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–º—É —é—Ä–∏—Å—Ç—É."""
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ." 