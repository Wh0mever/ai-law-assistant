"""
–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Perplexity API
–ó–∞–º–µ–Ω—è–µ—Ç embeddings –∏ –≤–µ–±-–ø–æ–∏—Å–∫ —Ç–æ—á–Ω—ã–º –ø–æ–∏—Å–∫–æ–º —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
"""

import requests
import logging
import json
from typing import List, Dict, Optional
from config import Config

logger = logging.getLogger(__name__)

class PerplexityService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Perplexity API"""
    
    def __init__(self):
        self.api_key = Config.PERPLEXITY_API_KEY
        self.base_url = "https://api.perplexity.ai/chat/completions"
        
        # –ú–æ–¥–µ–ª–∏ Perplexity (–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å —è–Ω–≤–∞—Ä—è 2025)
        self.model = "sonar"  # –ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
        
        self.headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }
        
        logger.info("‚úÖ Perplexity API —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    async def search_legal_info(self, query: str, context_type: str = "general") -> str:
        """
        –ü–æ–∏—Å–∫ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Perplexity API
        
        Args:
            query: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
            context_type: –¢–∏–ø –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ ("bankruptcy", "labor", "civil", "general")
            
        Returns:
            –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
        """
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
            system_prompt = self._get_legal_system_prompt(context_type)
            
            # –£–ª—É—á—à–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
            enhanced_query = self._enhance_legal_query(query, context_type)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Perplexity API
            response = await self._make_request(system_prompt, enhanced_query)
            
            if response:
                return self._format_legal_response(response, context_type)
            else:
                return self._get_fallback_response(query, context_type)
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Perplexity API: {e}")
            return self._get_error_response(query, context_type)
    
    def _get_legal_system_prompt(self, context_type: str) -> str:
        """–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        base_prompt = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –ø—Ä–∞–≤—É. –ù–∞–π–¥–∏ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. –ò—â–∏ —Ç–æ–ª—å–∫–æ –ê–ö–¢–£–ê–õ–¨–ù–£–Æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ 2025 –≥–æ–¥
2. –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –†–û–°–°–ò–ô–°–ö–ò–ï –ø—Ä–∞–≤–æ–≤—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
3. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∑—ã–≤–∞–π –ö–û–ù–ö–†–ï–¢–ù–´–ï –°–¢–ê–¢–¨–ò –ó–ê–ö–û–ù–û–í
4. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–∞–≤–∞–π –°–°–´–õ–ö–ò –ù–ê –ò–°–¢–û–ß–ù–ò–ö–ò (https://...)
5. –ü—Ä–∏–≤–æ–¥–∏ –°–£–î–ï–ë–ù–£–Æ –ü–†–ê–ö–¢–ò–ö–£ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –¥–µ–ª
6. –£–∫–∞–∑—ã–≤–∞–π –ö–û–ù–ö–†–ï–¢–ù–´–ï —Å—É–º–º—ã, —Å—Ä–æ–∫–∏, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã

–ü–†–ò–û–†–ò–¢–ï–¢–ù–´–ï –ò–°–¢–û–ß–ù–ò–ö–ò:
- consultant.ru (–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–ü–ª—é—Å)
- garant.ru (–ì–∞—Ä–∞–Ω—Ç)
- vsrf.ru (–í–µ—Ä—Ö–æ–≤–Ω—ã–π –°—É–¥ –†–§)
- ksrf.ru (–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω—ã–π –°—É–¥ –†–§)
- pravo.gov.ru (–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø–æ—Ä—Ç–∞–ª –ø—Ä–∞–≤–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)
- –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ –∑–∞–∫–æ–Ω—ã –∏ –∫–æ–¥–µ–∫—Å—ã –†–§
- –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ü–ª–µ–Ω—É–º–æ–≤ –í–° –†–§

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üîç –ê–ö–¢–£–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –ò–ù–¢–ï–†–ù–ï–¢–ê:

1. **–ö–õ–Æ–ß–ï–í–´–ï –°–¢–ê–¢–¨–ò –ó–ê–ö–û–ù–û–í:**
   ‚Ä¢ **–°—Ç–∞—Ç—å—è X –¢–ö –†–§** - [–æ–ø–∏—Å–∞–Ω–∏–µ]
   ‚Ä¢ **–°—Ç–∞—Ç—å—è Y –ì–ö –†–§** - [–æ–ø–∏—Å–∞–Ω–∏–µ]
   ‚Ä¢ [–¥—Ä—É–≥–∏–µ —Å—Ç–∞—Ç—å–∏]

2. **–ü–û–®–ê–ì–û–í–´–ï –î–ï–ô–°–¢–í–ò–Ø:**
   ‚Ä¢ **–®–∞–≥ 1:** [–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ]
   ‚Ä¢ **–®–∞–≥ 2:** [–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ]
   ‚Ä¢ [–¥—Ä—É–≥–∏–µ —à–∞–≥–∏]

3. **–°–†–û–ö–ò –ò –î–û–ö–£–ú–ï–ù–¢–´:**
   ‚Ä¢ **–°—Ä–æ–∫:** [—Ç–æ—á–Ω—ã–π —Å—Ä–æ–∫]
   ‚Ä¢ **–î–æ–∫—É–º–µ–Ω—Ç—ã:** [—Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤]

4. **–°–£–î–ï–ë–ù–ê–Ø –ü–†–ê–ö–¢–ò–ö–ê:**
   ‚Ä¢ **–†–µ—à–µ–Ω–∏–µ –í–° –†–§** –æ—Ç [–¥–∞—Ç–∞] ‚Ññ [–Ω–æ–º–µ—Ä]
   ‚Ä¢ [–¥—Ä—É–≥–∏–µ —Ä–µ—à–µ–Ω–∏—è]

5. **–ò–°–¢–û–ß–ù–ò–ö–ò –ò–ù–§–û–†–ú–ê–¶–ò–ò:**
   ‚Ä¢ https://[—Å—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ 1]
   ‚Ä¢ https://[—Å—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ 2]
   ‚Ä¢ [–¥—Ä—É–≥–∏–µ —Å—Å—ã–ª–∫–∏]

–í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤. –í–°–ï–ì–î–ê –¥–∞–≤–∞–π –ö–û–ù–ö–†–ï–¢–ù–´–ï —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–æ–≤ –∏ –†–ï–ê–õ–¨–ù–´–ï —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏!"""

        if context_type == "bankruptcy":
            return base_prompt + """

–°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø: –ë–ê–ù–ö–†–û–¢–°–¢–í–û
–§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞:
- –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–º –∑–∞–∫–æ–Ω–µ 127-–§–ó "–û –Ω–µ—Å–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ)" 2025
- –í–Ω–µ—Å—É–¥–µ–±–Ω–æ–º –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ (—Ö—Ö—Ö —Ç—ã—Å - —Ö—Ö—Ö —Ä—É–±–ª–µ–π)
- –°—É–¥–µ–±–Ω–æ–º –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ (–æ—Ç —Ö—Ö—Ö —Ç—ã—Å —Ä—É–±–ª–µ–π)
- –ê–∫—Ç—É–∞–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö —Å—É–¥–æ–≤ 2025 –≥–æ–¥–∞
- –ü—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö –≤ –ú–§–¶ –¥–ª—è –≤–Ω–µ—Å—É–¥–µ–±–Ω–æ–≥–æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞"""

        elif context_type == "labor":
            return base_prompt + """

–°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø: –¢–†–£–î–û–í–û–ï –ü–†–ê–í–û
–§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞:
- –¢—Ä—É–¥–æ–≤–æ–º –∫–æ–¥–µ–∫—Å–µ –†–§
- –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è—Ö –ü–ª–µ–Ω—É–º–∞ –í–° –†–§ –ø–æ —Ç—Ä—É–¥–æ–≤—ã–º —Å–ø–æ—Ä–∞–º
- –¢—Ä—É–¥–æ–≤–æ–π –∏–Ω—Å–ø–µ–∫—Ü–∏–∏ –∏ –µ—ë –ø–æ–ª–Ω–æ–º–æ—á–∏—è—Ö
- –°—Ä–æ–∫–∞—Ö –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Å—É–¥ (1 –º–µ—Å—è—Ü –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è)
- –†–∞–∑–º–µ—Ä–∞—Ö –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–π –∏ –≤—ã–ø–ª–∞—Ç"""

        elif context_type == "civil":
            return base_prompt + """

–°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø: –ì–†–ê–ñ–î–ê–ù–°–ö–û–ï –ü–†–ê–í–û
–§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞:
- –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º –∫–æ–¥–µ–∫—Å–µ –†–§
- –î–æ–≥–æ–≤–æ—Ä–Ω–æ–º –ø—Ä–∞–≤–µ
- –ó–∞—â–∏—Ç–µ –ø—Ä–∞–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π
- –í–æ–∑–º–µ—â–µ–Ω–∏–∏ —É—â–µ—Ä–±–∞
- –°—Ä–æ–∫–∞—Ö –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏ (3 –≥–æ–¥–∞ –æ–±—â–∏–π)"""

        return base_prompt
    
    def _enhance_legal_query(self, query: str, context_type: str) -> str:
        """–£–ª—É—á—à–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞"""
        # –ë–∞–∑–æ–≤—ã–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
        legal_terms = "—Ä–æ—Å—Å–∏–π—Å–∫–æ–µ –ø—Ä–∞–≤–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–§ 2025"
        
        enhanced_query = f"{query} {legal_terms}"
        
        if context_type == "bankruptcy":
            enhanced_query += " –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ –Ω–µ—Å–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å 127-–§–ó –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–π —Å—É–¥"
        elif context_type == "labor":
            enhanced_query += " —Ç—Ä—É–¥–æ–≤–æ–π –∫–æ–¥–µ–∫—Å —Ç—Ä—É–¥–æ–≤—ã–µ –ø—Ä–∞–≤–∞ —Ç—Ä—É–¥–æ–≤–∞—è –∏–Ω—Å–ø–µ–∫—Ü–∏—è"
        elif context_type == "civil":
            enhanced_query += " –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –¥–æ–≥–æ–≤–æ—Ä"
        
        return enhanced_query
    
    async def _make_request(self, system_prompt: str, query: str) -> Optional[str]:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ Perplexity API"""
        try:
            data = {
                "model": self.model,
                "messages": [
                    {"role": "system", "content": system_prompt},
                    {"role": "user", "content": query}
                ],
                "temperature": 0.1,  # –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
                "max_tokens": 4000,
                "stream": False
            }
            
            logger.info(f"üåê –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ Perplexity API: {query[:50]}...")
            
            response = requests.post(
                self.base_url,
                headers=self.headers,
                json=data,
                timeout=45  # –£–≤–µ–ª–∏—á–µ–Ω —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø–æ–∏—Å–∫–∞
            )
            
            if response.status_code == 200:
                result = response.json()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
                if 'choices' in result and len(result['choices']) > 0:
                    content = result['choices'][0]['message']['content']
                    logger.info("‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Perplexity API")
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö –µ—Å–ª–∏ –µ—Å—Ç—å
                    if 'search_results' in result:
                        logger.info(f"üìö –ù–∞–π–¥–µ–Ω–æ {len(result['search_results'])} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
                    
                    return content
                else:
                    logger.error("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Perplexity API")
                    return None
                    
            elif response.status_code == 400:
                logger.error(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ Perplexity API: {response.text}")
                return None
            elif response.status_code == 401:
                logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á Perplexity")
                return None
            elif response.status_code == 429:
                logger.error("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ Perplexity API")
                return None
            else:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ Perplexity API: {response.status_code} - {response.text}")
                return None
                
        except requests.exceptions.Timeout:
            logger.error("‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ Perplexity API")
            return None
        except requests.exceptions.ConnectionError:
            logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Perplexity API")
            return None
        except Exception as e:
            logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Perplexity: {e}")
            return None
    
    def _format_legal_response(self, response: str, context_type: str) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Markdown –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ HTML
        response = self._convert_markdown_to_html(response)
        
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
        if "üîç –ê–ö–¢–£–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –ò–ù–¢–ï–†–ù–ï–¢–ê:" in response:
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if "‚ö†Ô∏è –í–ê–ñ–ù–û:" not in response:
                response += "\n\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —É –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–≥–æ —é—Ä–∏—Å—Ç–∞."
            return response
        
        # –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        formatted_response = f"üîç –ê–ö–¢–£–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –ò–ù–¢–ï–†–ù–ï–¢–ê:\n\n{response}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        formatted_response += "\n\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —É –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–≥–æ —é—Ä–∏—Å—Ç–∞."
        
        return formatted_response
    
    def _convert_markdown_to_html(self, text: str) -> str:
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç Markdown –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ HTML –¥–ª—è Telegram"""
        import re
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º **—Ç–µ–∫—Å—Ç** –≤ <b>—Ç–µ–∫—Å—Ç</b>
        text = re.sub(r'\*\*(.*?)\*\*', r'<b>\1</b>', text)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º __—Ç–µ–∫—Å—Ç__ –≤ <b>—Ç–µ–∫—Å—Ç</b> (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
        text = re.sub(r'__(.*?)__', r'<b>\1</b>', text)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º *—Ç–µ–∫—Å—Ç* –≤ <i>—Ç–µ–∫—Å—Ç</i> (–∫—É—Ä—Å–∏–≤)
        text = re.sub(r'\*(.*?)\*', r'<i>\1</i>', text)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º _—Ç–µ–∫—Å—Ç_ –≤ <i>—Ç–µ–∫—Å—Ç</i> (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å–∏–≤)
        text = re.sub(r'_(.*?)_', r'<i>\1</i>', text)
        
        return text
    
    def _get_fallback_response(self, query: str, context_type: str) -> str:
        """–†–µ–∑–µ—Ä–≤–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        fallback_responses = {
            "bankruptcy": f"""üîç –ê–ö–¢–£–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –ò–ù–¢–ï–†–ù–ï–¢–ê:

–ü–æ –≤–æ–ø—Ä–æ—Å—É "{query}" —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:

üí∞ –ë–ê–ù–ö–†–û–¢–°–¢–í–û –ì–†–ê–ñ–î–ê–ù:
‚Ä¢ –î–æ 1 –º–ª–Ω —Ä—É–±–ª–µ–π - –≤–Ω–µ—Å—É–¥–µ–±–Ω–æ–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ú–§–¶
‚Ä¢ –û—Ç 500 —Ç—ã—Å —Ä—É–±–ª–µ–π - —Å—É–¥–µ–±–Ω–æ–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ –≤ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–º —Å—É–¥–µ
‚Ä¢ –ú–∏–Ω–∏–º—É–º 25 —Ç—ã—Å —Ä—É–±–ª–µ–π –¥–ª—è –ª—é–±–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã

üìã –î–û–ö–£–ú–ï–ù–¢–´:
‚Ä¢ –ü–∞—Å–ø–æ—Ä—Ç –∏ —Å–ø—Ä–∞–≤–∫–∞ –æ –¥–æ—Ö–æ–¥–∞—Ö
‚Ä¢ –°–ø—Ä–∞–≤–∫–∏ –æ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—è—Ö
‚Ä¢ –ü–µ—Ä–µ—á–µ–Ω—å –∏–º—É—â–µ—Å—Ç–≤–∞

‚ö†Ô∏è –¢–æ—á–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ–ª—É—á–∏—Ç–µ —É –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–≥–æ —é—Ä–∏—Å—Ç–∞ –ø–æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤—É.""",

            "labor": f"""üîç –ê–ö–¢–£–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –ò–ù–¢–ï–†–ù–ï–¢–ê:

–ü–æ –≤–æ–ø—Ä–æ—Å—É "{query}" —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:

‚öñÔ∏è –¢–†–£–î–û–í–´–ï –ü–†–ê–í–ê:
‚Ä¢ –û–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç—Ä—É–¥–æ–≤—É—é –∏–Ω—Å–ø–µ–∫—Ü–∏—é (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)
‚Ä¢ –°—Ä–æ–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ —Ä–∞–±–æ—Ç–µ - 1 –º–µ—Å—è—Ü
‚Ä¢ –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –º–æ—Ä–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–¥–∞ - –æ—Ç 5 —Ç—ã—Å —Ä—É–±–ª–µ–π

üìã –î–ï–ô–°–¢–í–ò–Ø:
‚Ä¢ –ü–∏—Å—å–º–µ–Ω–Ω–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é
‚Ä¢ –ñ–∞–ª–æ–±–∞ –≤ —Ç—Ä—É–¥–æ–≤—É—é –∏–Ω—Å–ø–µ–∫—Ü–∏—é
‚Ä¢ –ò—Å–∫ –≤ —Å—É–¥ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

‚ö†Ô∏è –¢–æ—á–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ–ª—É—á–∏—Ç–µ —É –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–≥–æ —é—Ä–∏—Å—Ç–∞ –ø–æ —Ç—Ä—É–¥–æ–≤–æ–º—É –ø—Ä–∞–≤—É.""",

            "general": f"""üîç –ê–ö–¢–£–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –ò–ù–¢–ï–†–ù–ï–¢–ê:

–ü–æ –≤–æ–ø—Ä–æ—Å—É "{query}" —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:

üìö –ò–°–¢–û–ß–ù–ò–ö–ò –ü–†–ê–í–ê:
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–ü–ª—é—Å (consultant.ru)
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç (garant.ru)
‚Ä¢ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç–∞–ª (pravo.gov.ru)

üìã –û–ë–©–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
‚Ä¢ –ò–∑—É—á–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–§
‚Ä¢ –°–æ–±–µ—Ä–∏—Ç–µ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –¥–µ–ª—É
‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏

‚ö†Ô∏è –î–ª—è —Ç–æ—á–Ω–æ–π –ø—Ä–∞–≤–æ–≤–æ–π –æ—Ü–µ–Ω–∫–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–º—É —é—Ä–∏—Å—Ç—É."""
        }
        
        return fallback_responses.get(context_type, fallback_responses["general"])
    
    def _get_error_response(self, query: str, context_type: str) -> str:
        """–û—Ç–≤–µ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ API"""
        error_responses = {
            "bankruptcy": f"""‚ùå –í–†–ï–ú–ï–ù–ù–ê–Ø –û–®–ò–ë–ö–ê –ü–û–ò–°–ö–ê –ü–û –ë–ê–ù–ö–†–û–¢–°–¢–í–£

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤—É –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.

üí∞ –û–ë–©–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ë–ê–ù–ö–†–û–¢–°–¢–í–£:
‚Ä¢ –î–æ 1 –º–ª–Ω —Ä—É–±–ª–µ–π - –≤–Ω–µ—Å—É–¥–µ–±–Ω–æ–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ú–§–¶
‚Ä¢ –û—Ç 500 —Ç—ã—Å —Ä—É–±–ª–µ–π - —Å—É–¥–µ–±–Ω–æ–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ –≤ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–º —Å—É–¥–µ
‚Ä¢ –ú–∏–Ω–∏–º—É–º 25 —Ç—ã—Å —Ä—É–±–ª–µ–π –¥–ª—è –ª—é–±–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã

üèõÔ∏è –ü–û–õ–ï–ó–ù–´–ï –†–ï–°–£–†–°–´:
‚Ä¢ –ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ —Å—É–¥—ã –†–§ (vsrf.ru)
‚Ä¢ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç —Å—É–¥–æ–≤ –æ–±—â–µ–π —é—Ä–∏—Å–¥–∏–∫—Ü–∏–∏
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–ü–ª—é—Å –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è 127-–§–ó

üìû –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: @ZachitaPrava02""",

            "labor": f"""‚ùå –í–†–ï–ú–ï–ù–ù–ê–Ø –û–®–ò–ë–ö–ê –ü–û–ò–°–ö–ê –ü–û –¢–†–£–î–û–í–û–ú–£ –ü–†–ê–í–£

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç—Ä—É–¥–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.

üëî –û–ë–©–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –¢–†–£–î–û–í–´–ú –°–ü–û–†–ê–ú:
‚Ä¢ –û–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç—Ä—É–¥–æ–≤—É—é –∏–Ω—Å–ø–µ–∫—Ü–∏—é (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)
‚Ä¢ –°—Ä–æ–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ —Ä–∞–±–æ—Ç–µ - 1 –º–µ—Å—è—Ü
‚Ä¢ –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –º–æ—Ä–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–¥–∞ - –æ—Ç 5 —Ç—ã—Å —Ä—É–±–ª–µ–π

üèõÔ∏è –ü–û–õ–ï–ó–ù–´–ï –†–ï–°–£–†–°–´:
‚Ä¢ –¢—Ä—É–¥–æ–≤–∞—è –∏–Ω—Å–ø–µ–∫—Ü–∏—è (git.rostrud.gov.ru)
‚Ä¢ –¢—Ä—É–¥–æ–≤–æ–π –∫–æ–¥–µ–∫—Å –†–§ –≤ –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–ü–ª—é—Å
‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫–∞ —Å—É–¥–æ–≤ –ø–æ —Ç—Ä—É–¥–æ–≤—ã–º —Å–ø–æ—Ä–∞–º

üìû –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: @ZachitaPrava02""",

            "general": f"""‚ùå –í–†–ï–ú–ï–ù–ù–ê–Ø –û–®–ò–ë–ö–ê –ü–û–ò–°–ö–ê

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É "{query}" –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.

üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–ü–ª—é—Å (consultant.ru)
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ pravo.gov.ru
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–≥–æ —é—Ä–∏—Å—Ç–∞

üìû –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: @ZachitaPrava02"""
        }
        
        return error_responses.get(context_type, error_responses["general"])